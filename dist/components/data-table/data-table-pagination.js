import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight, } from "lucide-react";
import { Button } from "../../components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "../../components/ui/select";
import { cn } from "../../lib/utils";
export function DataTablePagination({ table, pageSizeOptions = [10, 20, 30, 40, 50], className, ...props }) {
    return (_jsxs("div", { className: cn("flex w-full flex-col-reverse items-center justify-between gap-4 overflow-auto p-1 sm:flex-row sm:gap-8", className), ...props, children: [_jsxs("div", { className: "flex-1 whitespace-nowrap text-muted-foreground text-sm", children: [table.getFilteredSelectedRowModel().rows.length, " of", " ", table.getFilteredRowModel().rows.length, " row(s) selected."] }), _jsxs("div", { className: "flex flex-col-reverse items-center gap-4 sm:flex-row sm:gap-6 lg:gap-8", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("p", { className: "whitespace-nowrap font-medium text-sm", children: "Rows per page" }), _jsxs(Select, { value: `${table.getState().pagination.pageSize}`, onValueChange: (value) => {
                                    table.setPageSize(Number(value));
                                }, children: [_jsx(SelectTrigger, { className: "h-8 w-[4.5rem] [&[data-size]]:h-8", children: _jsx(SelectValue, { placeholder: table.getState().pagination.pageSize }) }), _jsx(SelectContent, { side: "top", children: pageSizeOptions.map((pageSize) => (_jsx(SelectItem, { value: `${pageSize}`, children: pageSize }, pageSize))) })] })] }), _jsxs("div", { className: "flex items-center justify-center font-medium text-sm", children: ["Page ", table.getState().pagination.pageIndex + 1, " of", " ", table.getPageCount()] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Button, { "aria-label": "Go to first page", variant: "outline", size: "icon", className: "hidden size-8 lg:flex", onClick: () => table.setPageIndex(0), disabled: !table.getCanPreviousPage(), children: _jsx(ChevronsLeft, {}) }), _jsx(Button, { "aria-label": "Go to previous page", variant: "outline", size: "icon", className: "size-8", onClick: () => table.previousPage(), disabled: !table.getCanPreviousPage(), children: _jsx(ChevronLeft, {}) }), _jsx(Button, { "aria-label": "Go to next page", variant: "outline", size: "icon", className: "size-8", onClick: () => table.nextPage(), disabled: !table.getCanNextPage(), children: _jsx(ChevronRight, {}) }), _jsx(Button, { "aria-label": "Go to last page", variant: "outline", size: "icon", className: "hidden size-8 lg:flex", onClick: () => table.setPageIndex(table.getPageCount() - 1), disabled: !table.getCanNextPage(), children: _jsx(ChevronsRight, {}) })] })] })] }));
}
//# sourceMappingURL=data-table-pagination.js.map